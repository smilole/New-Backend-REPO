version: '3.8'
services:
  init-db:
    image: postgres:14.7-alpine
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    command: ["./wait-for-it.sh", "postgres:5432", "--", "psql", "-U", "postgres", "-d", "postgres", "-f", "/docker-entrypoint-initdb.d/init.sql"]
    volumes:
      - ./docker/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./docker/wait-for-it.sh:/wait-for-it.sh
    networks:
      - my-network

  service-db:
    image: postgres:14.7-alpine
    environment:
      POSTGRES_DB: tsu-keys
      POSTGRES_USER: postgresAdmin
      POSTGRES_PASSWORD: 1
    ports:
      - "15432:5432"
    depends_on:
      - init-db
    restart: unless-stopped
    networks:
      - my-network

  client-backend:
    image: test-app
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8181:8181"
    depends_on:
      - service-db
    environment:
      - SERVER_PORT= 8181
      - SPRING_DATASOURCE_URL=jdbc:postgresql://service-db/tsu-keys
    networks:
      - my-network


  pgadmin:
    container_name: pgadmin4_container
    image: dpage/pgadmin4:7
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: root
    ports:
      - "5050:80"
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    networks:
      - my-network

networks:
  my-network:
    driver: bridge
volumes:
  db-data:
  pgadmin-data:
